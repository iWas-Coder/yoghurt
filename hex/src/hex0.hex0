# :start 0
E0002D2B0001    # LOADUI R11 1 ; Our toggle
# ;; R15 is storing our nybble

# ;; Prep TAPE_01
E0002D201100    # LOADUI R0 0x1100
42100000        # FOPEN_READ

# ;; Prep TAPE_02
E0002D201101    # LOADUI R0 0x1101
42100001        # FOPEN_WRITE

E0002D211100    # LOADUI R1 0x1100 ; Read from tape_01

# ;; Main program loop
# ;; Halts when done
# :loop 20
42100100        # FGETC ; Read a Char

# ;; Check for EOF
E0002CC000b8    # JUMP.NP R0 @finish
3C000044        # JUMP @hex ; Convert it

# :loop_1 2e
E0002CC0ffec    # JUMP.NP R0 @loop ; Don't use nonhex chars
E0002C9B000e    # JUMP.Z R11 @loop_2 ; Jump if toggled

# ;; Process first byte of pair
E100B0F0000f    # ANDI R15 R0 0xF ; Store First nibble
0D00002B        # FALSE R11 ; Flip the toggle
3C00ffd8        # JUMP @loop

# :loop_2 48
E0002D5F0004    # SL0I R15 4 ; Shift our first nibble
E100B000000f    # ANDI R0 R0 0xF ; Mask out top
0500000F        # ADD R0 R0 R15 ; Combine nibbles
E0002D1B0001    # LOADI R11 1 ; Flip the toggle
E0002D211101    # LOADUI R1 0x1101 ; Write the combined byte
42100200        # FPUTC ; To TAPE_02
E0002D211100    # LOADUI R1 0x1100 ; Read from tape_01
3C00ffae        # JUMP @loop ; Try to get more bytes

# ;; Hex function
# ;; Converts Ascii chars to their hex values
# ;; Or -1 if not a hex char
# ;; Returns to whatever called it
# :hex 72
# ;; Deal with line comments starting with #
E000A0300023    # CMPSKIPI.NE R0 35
3C000050        # JUMP @ascii_comment
# ;; Deal with line comments starting with ;
E000A030003b    # CMPSKIPI.NE R0 59
3C000046        # JUMP @ascii_comment
# ;; Deal with all ascii less than '0'
E000A0100030    # CMPSKIPI.GE R0 48
3C00004a        # JUMP @ascii_other
# ;; Deal with '0'-'9'
E000A0000039    # CMPSKIPI.G R0 57
3C00001e        # JUMP @ascii_num
# ;; Unset high bit to set everything into uppercase
E100B00000df    # ANDI R0 R0 0xDF
# ;; Deal with all ascii less than 'A'
E000A0100041    # CMPSKIPI.GE R0 65
3C000030        # JUMP @ascii_other
# ;; Deal with 'A'-'F'
E000A0000046    # CMPSKIPI.G R0 70
3C00000e        # JUMP @ascii_high
# ;; Ignore the rest
3C000022        # JUMP @ascii_other

# :ascii_num b8
E10011000030    # SUBUI R0 R0 48
3C00ff6c        # JUMP @loop_1
# :ascii_high c2
E10011000037    # SUBUI R0 R0 55
3C00ff62        # JUMP @loop_1
# :ascii_comment cc
42100100        # FGETC ; Read another char
E000A020000a    # CMPSKIPI.E R0 10 ; Stop at the end of line
3C00fff2        # JUMP @ascii_comment ; Otherwise keep looping
# :ascii_other da
0D000030        # TRUE R0
3C00ff4c        # JUMP @loop_1

# ;; Finish function
# ;; Cleans up at the end of the program
# ;; Performs the HALT
# :finish e2
E0002D201100    # LOADUI R0 0x1100 ; Close TAPE_01
42100002        # FCLOSE
E0002D201101    # LOADUI R0 0x1101 ; Close TAPE_02
42100002        # FCLOSE
FFFFFFFF        # HALT
